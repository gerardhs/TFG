'''Eulerian video magnification module'''


import cv2
import numpy as np


def gaussian_pyramid(src, lvl=3):
    G = src.copy()
    pyramid = [G]
    for i in range(lvl):
        G = cv2.pyrDown(G)
        pyramid.append(G)
    return pyramid


def reconnstruct(src, lvl=3):
    for i in range(lvl):
        src = cv2.pyrUp(src)
    return src


def amplify(src, amp=50):
    return src*amp


def temporal_filter(src, fps, high, low, axis=0):
    fft = np.fft.fft(src, axis=axis)
    freqs = np.fft.fftfreq(src.shape[0], d=1.0 / fps)
    bound_low = (np.abs(freqs - low)).argmin()
    bound_high = (np.abs(freqs - high)).argmin()
    fft[:bound_low] = 0
    fft[bound_high:-bound_high] = 0
    fft[-bound_low:] = 0
    iff = np.fft.ifft(fft, axis=axis)
    return np.abs(iff)


def color_magnification(src, low, high, lvls, amp):
    gaussian = gaussian_pyramid(src, lvls)
    return ""
